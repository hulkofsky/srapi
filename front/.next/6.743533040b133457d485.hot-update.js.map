{"version":3,"file":"6.743533040b133457d485.hot-update.js","sources":["webpack:///actions/index.js","webpack:///components/Header.jsx"],"sourcesContent":["import fetch from 'isomorphic-unfetch'\r\n\r\nconst backendUrl = 'http://localhost:1337'\r\nconst authUrl = backendUrl + '/auth'\r\nconst baseApiUrl = backendUrl + '/api'\r\n\r\nexport const REQUEST_CURRENT_LOCATION = 'REQUEST_CURRENT_LOCATION'\r\nexport const REQUEST_LOCATIONS = 'REQUEST_LOCATIONS'\r\nexport const RECEIVE_CURRENT_LOCATION = 'RECEIVE_CURRENT_LOCATION'\r\nexport const RECEIVE_LOCATIONS = 'RECEIVE_LOCATIONS'\r\nexport const SHOW_AUTH_DIALOG = 'SHOW_AUTH_DIALOG'\r\nexport const HIDE_AUTH_DIALOG = 'HIDE_AUTH_DIALOG'\r\nexport const SUBMIT_AUTH_DIALOG = 'SUBMIT_AUTH_DIALOG'\r\nexport const PROCESS_AUTH_DIALOG = 'PROCESS_AUTH_DIALOG'\r\nexport const SHOW_MAIN_MENU = 'SHOW_MAIN_MENU'\r\nexport const HIDE_MAIN_MENU = 'HIDE_MAIN_MENU'\r\n\r\nexport const requestCurrentLocation = (locationID) => {\r\n  return {\r\n    type: REQUEST_CURRENT_LOCATION,\r\n    id: locationID\r\n  }\r\n}\r\n\r\nexport const requestLocations = () => {\r\n  return {\r\n    type: REQUEST_LOCATIONS\r\n  }\r\n}\r\n\r\nexport const receiveCurrentLocation = (json) => {\r\n  return {\r\n    type: RECEIVE_CURRENT_LOCATION,\r\n    location: json,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nexport const receiveLocations = (json) => {\r\n  return {\r\n    type: RECEIVE_LOCATIONS,\r\n    locations: json,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nexport const fetchCurrentLocation = (locationID) => {\r\n  return function (dispatch) {\r\n    dispatch(requestCurrentLocation());\r\n\r\n    return fetch(baseApiUrl + '/location/' + locationID)\r\n      .then(\r\n        response => response.json(),\r\n        error => console.log('An error occurred.', error)\r\n      )\r\n      .then(json =>\r\n        dispatch(receiveCurrentLocation(json))\r\n      )\r\n  }\r\n}\r\n\r\nexport const fetchLocations = () => {\r\n  return function (dispatch) {\r\n    dispatch(requestLocations());\r\n\r\n    return fetch(baseApiUrl + '/location')\r\n      .then(\r\n        response => response.json(),\r\n        error => console.log('An error occurred.', error)\r\n      )\r\n      .then(json => \r\n        dispatch(receiveLocations(json))\r\n      )\r\n  }\r\n}\r\n\r\nexport const showAuthDialog = () => {\r\n  return {\r\n    type: SHOW_AUTH_DIALOG\r\n  }\r\n}\r\n\r\nexport const hideAuthDialog = () => {\r\n  return {\r\n    type: HIDE_AUTH_DIALOG\r\n  }\r\n}\r\n\r\nexport const showMainMenu = () => {\r\n  return {\r\n    type: SHOW_MAIN_MENU\r\n  }\r\n}\r\n\r\nexport const hideMainMenu = () => {\r\n  return {\r\n    type: HIDE_MAIN_MENU\r\n  }\r\n}\r\n\r\nexport const submitAuthDialog = (identifier, password) => {\r\n  return function (dispatch) {\r\n    return fetch(authUrl + '/local', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({identifier, password})\r\n    })\r\n    .then(\r\n      response => response.json(),\r\n      error => console.log('An error occurred.', error)\r\n    )\r\n    .then(json => {\r\n      if (json.error) {\r\n        alert(json.message)\r\n      } else {\r\n        dispatch(processAuthDialog(json))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const processAuthDialog = (auth) => {\r\n  return {\r\n    type: PROCESS_AUTH_DIALOG,\r\n    auth: auth\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// actions/index.js","import Head from 'next/head'\r\nimport Link from 'next/link'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {\r\n  showAuthDialog,\r\n  hideAuthDialog,\r\n  showMainMenu,\r\n  hideMainMenu,\r\n  submitAuthDialog,\r\n  processAuthDialog\r\n} from '../actions'\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    navIsSticky: false\r\n  }\r\n\r\n  handleAuthDialogSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    \r\n    this.props.submitAuthDialog(data.get(\"identifier\"), data.get(\"password\"));\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.updateMainMenuSticky.bind(this), { passive: true })\r\n\r\n    this.updateMainMenuSticky();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.updateMainMenuSticky)\r\n  }\r\n\r\n  updateMainMenuSticky() {\r\n    this.setState({navIsSticky: (window.pageYOffset > 0)});\r\n  }\r\n\r\n  toggleMainMenu() {\r\n    this.props.mainMenu.isVisible ? this.props.hideMainMenu() : this.props.showMainMenu();\r\n  }\r\n\r\n  render () {\r\n    let { authDialog } = this.props;\r\n    let navClasses = [\r\n      'nav',\r\n      (this.props.navClass ? this.props.navClass : ''),\r\n      (this.state.navIsSticky ? 'sticky ' : ''),\r\n      (this.props.mainMenu.isVisible ? 'menu-visible ' : '')\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <Head>\r\n          <title>{this.props.title}</title>\r\n          <link rel=\"shortcut icon\" href=\"/static/favicon.ico\" />\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n          <meta charSet=\"utf-8\" />\r\n          <link rel=\"stylesheet\" href=\"/static/style.css\" />\r\n        </Head>\r\n\r\n        {/*<Button bsStyle=\"primary\" bsSize=\"large\" onClick={this.props.showAuthDialog}>Show auth dialog</Button>*/}\r\n\r\n        <Modal show={authDialog.isVisible} onHide={this.props.hideAuthDialog}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Authentication required</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <form onSubmit={this.handleAuthDialogSubmit.bind(this)}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"identifierInput\">Username or email</label>\r\n                <input type=\"text\" name=\"identifier\" className=\"form-control\" id=\"identifierInput\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"passwordInput\">Password</label>\r\n                <input type=\"password\" name=\"password\" className=\"form-control\" id=\"passwordInput\" />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <nav className={navClasses.join(' ')}>\r\n          <Link href={{ pathname: '/' }}>\r\n            <a className=\"main-menu-item\">\r\n              <img className=\"logo\" src=\"/static/svg/logo.svg\" alt=\"logo\" onClick={this.toggleMainMenu.bind(this)} />\r\n            </a>\r\n          </Link>\r\n          <div className=\"burger\" onClick={this.toggleMainMenu.bind(this)}></div>\r\n        </nav>\r\n\r\n        <div className={'main-menu ' + (this.props.mainMenu.isVisible ? 'visible' : '')}>\r\n          <Link href={{ pathname: '/' }}>\r\n            <a className=\"main-menu-item\">\r\n              <div onClick={this.toggleMainMenu.bind(this)}>home</div>\r\n            </a>\r\n          </Link>\r\n          <Link href={{ pathname: '/locations' }}>\r\n            <a className=\"main-menu-item\">\r\n              <div onClick={this.toggleMainMenu.bind(this)}>locations</div>\r\n            </a>\r\n          </Link>\r\n          <Link href={{ pathname: '/spotify' }}>\r\n            <a className=\"main-menu-item\">\r\n              <div onClick={this.toggleMainMenu.bind(this)}>spotify</div>\r\n            </a>\r\n          </Link>\r\n          <Link href={{ pathname: '/stance' }}>\r\n            <a className=\"main-menu-item\">\r\n              <div onClick={this.toggleMainMenu.bind(this)}>stance</div>\r\n            </a>\r\n          </Link>\r\n          <Link href={{ pathname: '/contact' }}>\r\n            <a className=\"main-menu-item\">\r\n              <div onClick={this.toggleMainMenu.bind(this)}>contact</div>\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authDialog: state.authDialog,\r\n    mainMenu: state.mainMenu,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    showAuthDialog: bindActionCreators(showAuthDialog, dispatch),\r\n    hideAuthDialog: bindActionCreators(hideAuthDialog, dispatch),\r\n    submitAuthDialog: bindActionCreators(submitAuthDialog, dispatch),\r\n    processAuthDialog: bindActionCreators(processAuthDialog, dispatch),\r\n    showMainMenu: bindActionCreators(showMainMenu, dispatch),\r\n    hideMainMenu: bindActionCreators(hideMainMenu, dispatch),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n\n\n// WEBPACK FOOTER //\n// components/Header.jsx"],"mappings":"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","sourceRoot":""}