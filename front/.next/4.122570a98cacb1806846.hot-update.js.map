{"version":3,"file":"4.122570a98cacb1806846.hot-update.js","sources":["webpack:///utils/threejs/SceneManager.js"],"sourcesContent":["import * as THREE from 'three-full';\nimport SceneSubject from './SceneSubject';\nimport GeneralLights from './GeneralLights';\n\nexport default canvas => {\n\n  const clock = new THREE.Clock();\n  const deg = Math.PI / 180;\n  const origin = new THREE.Vector3(0, 0, 0);\n\n  const screenDimensions = {\n    width: canvas.width,\n    height: canvas.height\n  };\n\n  const scene = buildScene();\n  const renderer = buildRender(screenDimensions);\n  const camera = buildCamera(screenDimensions);\n  const sceneSubjects = createSceneSubjects(scene);\n\n  function buildScene() {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color('#191715');\n\n    return scene;\n  }\n\n  function buildRender({width, height}) {\n    const renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true, alpha: false});\n    const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    renderer.setPixelRatio(DPR);\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x191715);\n\n    // renderer.gammaInput = false;\n    // renderer.gammaOutput = false;\n\n    return renderer;\n  }\n\n  function buildCamera({width, height}) {\n    const aspectRatio = width / height;\n    const fieldOfView = 4; //5\n    const nearPlane = 4;\n    const farPlane = 100;\n    const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\n    camera.position.z = 12; //7\n    // camera.position.y = 0.5; //7\n\n    window.camera = camera;\n    console.log(camera);\n\n    // camera.lookAt(0, 0, 0);\n    camera.lookAt(0, 0.1, 0);\n\n    return camera;\n  }\n\n  function createSceneSubjects(scene) {\n    const sceneSubjects = [\n      new GeneralLights(scene),\n      new SceneSubject(scene)\n    ];\n\n    return sceneSubjects;\n  }\n\n  function update() {\n    const elapsedTime = clock.getElapsedTime();\n\n    for (let i = 0; i < sceneSubjects.length; i++)\n      sceneSubjects[i].update(elapsedTime);\n\n    // camera.rotation.z += 0.05*deg;\n    // camera.position.y += 0.005;\n\n    renderer.render(scene, camera);\n  }\n\n  function onWindowResize() {\n    const {width, height} = canvas;\n\n    screenDimensions.width = width;\n    screenDimensions.height = height;\n\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(width, height);\n  }\n\n  return {\n    update,\n    onWindowResize\n  };\n}\n\n\n// WEBPACK FOOTER //\n// utils/threejs/SceneManager.js"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AA7FA;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}