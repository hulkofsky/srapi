{"version":3,"file":"4.a56e67e986d0ee7b5ee3.hot-update.js","sources":["webpack:///utils/threejs/SceneSubject.js"],"sourcesContent":["import * as THREE from 'three-full';\n// import OBJLoader2 from './OBJLoader2'\n\nexport default scene => {\n  const deg = Math.PI/180;\n  const pivot = new THREE.Object3D();\n  const cubeBackMaterials = [\n    new THREE.LineBasicMaterial({color: 0x302e2f}), // left\n    new THREE.LineBasicMaterial({color: 0x363234}),\n    new THREE.LineBasicMaterial({color: 0x191715}), // top\n    new THREE.LineBasicMaterial({color: 0x191715}),\n    new THREE.LineBasicMaterial({color: 0x231f20}),\n    new THREE.LineBasicMaterial({color: 0x231f20}), // right\n  ];\n\n  const cubeGeometry = new THREE.BoxGeometry(3.999, 3.999, 3.999);\n  const cubeBack = new THREE.Mesh(cubeGeometry, cubeBackMaterials);\n        cubeBack.position.set(-1, -1, 1);\n\n  // cubeBack.rotation.set(36*deg, 45*deg, 0);\n  const cubeGroup = new THREE.Group();\n        cubeGroup.rotation.set(36*deg, 225.1*deg, 0);\n\n\n  //===== GLOBAL ==== ///\n  window.cubeGroup = cubeGroup;\n  window.cubeBack = cubeBack;\n  window.pivot = pivot;\n  //===== GLOBAL ==== ///\n\n  console.log(cubeGroup);\n\n\n\n  const loader = new THREE.TextureLoader();\n  // loader.load('static/images/cube_text_big.png', function ( texture ) {\n  //   const cubeMaterials = [\n  //     new THREE.MeshBasicMaterial({ map: texture, transparent: true, overdraw: 0.5}),\n  //     new THREE.MeshBasicMaterial({ map: texture, transparent: true, overdraw: 0.5}), // left\n  //     new THREE.MeshBasicMaterial({ map: texture, transparent: true, overdraw: 0.5}), // top\n  //     new THREE.MeshBasicMaterial({ map: texture, transparent: true, overdraw: 0.5}),\n  //     new THREE.MeshBasicMaterial({ map: texture, transparent: true, overdraw: 0.5}), // right\n  //     new THREE.MeshBasicMaterial({ map: texture, transparent: true, overdraw: 0.5}),\n  //   ];\n  //\n  //   const cubeMaterialsBack = [\n  //     new THREE.MeshBasicMaterial({ color:0x191715 }),\n  //     new THREE.MeshBasicMaterial({ color:0x363234 }), // left\n  //     new THREE.MeshBasicMaterial({ color:0x191715 }), // top\n  //     new THREE.MeshBasicMaterial({ color:0x191715 }),\n  //     new THREE.MeshBasicMaterial({ color:0x231f20 }), // right\n  //     new THREE.MeshBasicMaterial({ color:0x363234 }),\n  //   ];\n  //\n  //   cube = new THREE.Mesh(geometry, cubeMaterials);\n  //   cube.rotation.set(36*deg, 43*deg, 0);\n  //\n  //   const leftFace = cube.material[1];\n  //   const topFace = cube.material[2];\n  //   const rightFace = cube.material[3];\n  //\n  //   leftFace.map.repeat.set(3, 3);\n  //   topFace.map.repeat.set(3, 3);\n  //   rightFace.map.repeat.set(3, 3);\n  //\n  //   leftFace.map.center.set(-0.15, 0.15);\n  //   topFace.map.center.set(-0.15, 0.15);\n  //   console.log(leftFace.map);\n  //   topFace.map.rotation = -45*deg;\n  //\n  //   cubeBack = new THREE.Mesh(geometry, cubeMaterialsBack);\n  //   cubeBack.rotation.set(36*deg, 43*deg, 0);\n  //\n  //   cubeGroup.position.set(1, -2, 0);\n  //   cubeGroup.rotation.set(-2*deg, -2*deg, -2*deg);\n  //\n  //   cubeGroup.add(cube);\n  //   cubeGroup.add(cubeBack);\n  //\n  //   scene.add(cubeGroup);\n  //   console.log(cubeGroup);\n  // });\n  // const loaderObj = new THREE.OBJLoader2();\n\n  // const getCube = (modelName) => {\n  //\n  //   if (typeof faceobj === 'undefined' && typeof modelurl === 'undefined') {\n  //\n  //   }\n  //\n  //   return new Promise((resolve) => {\n  //\n  //     const callbackOnLoad = (event) => {\n  //       const obj = event.detail.loaderRootNode;\n  //\n  //       obj.traverse(function (child) {\n  //         if (child instanceof THREE.Mesh) {\n  //\n  //           // child.geometry.translate( -90, -82, -23 );\n  //           // child.rotation.z = Math.PI\n  //           // child.material.side = THREE.DoubleSide;\n  //           // const tempGeo = new Geometry().fromBufferGeometry(child.geometry);\n  //           // tempGeo.computeVertexNormals();\n  //           // tempGeo.mergeVertices();\n  //           // child.geometry = new BufferGeometry().fromGeometry(tempGeo);\n  //\n  //\n  //         }\n  //       })\n  //\n  //       resolve(obj)\n  //     };\n  //\n  //\n  //     const onLoadMtl = ( materials ) => {\n  //       loaderObj.setModelName( 'face1' );\n  //       loaderObj.setMaterials( materials );\n  //       loaderObj.load('/static/obj/cube.obj', callbackOnLoad, null, null, null, false );\n  //     };\n  //\n  //     onLoadMtl()\n  //   })\n  //\n  // };\n\n\n  const loaderObj = new THREE.OBJLoader();\n  const loaderMtl = new THREE.MTLLoader();\n\n\n  const getCube = (modelName) => {\n\n    return new Promise((resolve) => {\n      loaderMtl.load('/static/obj/cube.mtl', materials => {\n\n        materials.preload();\n        loaderObj.setMaterials(materials);\n        loaderObj.load('/static/obj/cube.obj', (obj) => {\n\n          obj.traverse(function (child) {\n            if (child instanceof THREE.Mesh) {\n              child.material.forEach((item) => {\n                item.color.set(0xFFFFFF);\n              })\n            }\n          })\n\n          resolve(obj)\n        })\n      })\n    })\n  };\n\n\n  const addObjectToScene = (objArr) => {\n    cubeGroup.add(cubeBack);\n    objArr.forEach(item => {\n      cubeGroup.add(item);\n    });\n\n    cubeGroup.position.set(0, 0, -1.75);\n    pivot.add( cubeGroup );\n    scene.add( pivot );\n  };\n\n\n  const whenTheAllModelsLoaded = () => {\n    console.log('uploaded');\n    scene.background = new THREE.Color('#231f20');\n\n  };\n  Promise.all([\n\n    getCube().then(obj => { // Do something after Player model loaded;\n      console.log(obj);\n      obj.traverse(function (child) {\n        if (child instanceof THREE.Mesh) {\n          child.material.forEach((item) => {\n            item.transparent = true;\n          })\n        }\n      });\n\n      addObjectToScene([obj]);\n    })\n\n  ]).then(whenTheAllModelsLoaded);\n\n\n  const speed = 0.001;\n  function update(time) {\n    // if( cubeGroup ) {\n    //   cubeGroup.rotation.y += time * speed;\n    //   cubeGroup.rotation.z += time * speed;\n    // }\n  }\n\n  return {\n    update,\n    cubeGroup\n  };\n}\n\n\n// WEBPACK FOOTER //\n// utils/threejs/SceneSubject.js"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAvMA;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}