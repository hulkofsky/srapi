{"version":3,"file":"4.f7771bfb807831d993e4.hot-update.js","sources":["webpack:///utils/threejs/SceneManager.js","webpack:///utils/threejs/SceneSubject.js","webpack:///utils/threejs/threeEntryPoint.js"],"sourcesContent":["import * as THREE from 'three-full';\nimport SceneSubject from './SceneSubject';\nimport GeneralLights from './GeneralLights';\n\nexport default canvas => {\n\n  const clock = new THREE.Clock();\n  const deg = Math.PI / 180;\n  const origin = new THREE.Vector3(0, 0, 0);\n\n  const screenDimensions = {\n    width: canvas.width,\n    height: canvas.height\n  };\n\n  const scene = buildScene();\n  const renderer = buildRender(screenDimensions);\n  const camera = buildCamera(screenDimensions);\n  const sceneSubjects = createSceneSubjects(scene);\n\n  function buildScene() {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color('#191715');\n\n    return scene;\n  }\n\n  function buildRender({width, height}) {\n    const renderer = new THREE.WebGLRenderer({canvas: canvas, antialias: true, alpha: false});\n    const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\n    renderer.setPixelRatio(DPR);\n    renderer.setSize(width, height);\n    renderer.setClearColor(0x191715);\n\n    // renderer.gammaInput = false;\n    // renderer.gammaOutput = false;\n\n    return renderer;\n  }\n\n  function buildCamera({width, height}) {\n    const aspectRatio = width / height;\n    const fieldOfView = 4; //5\n    const nearPlane = 4;\n    const farPlane = 100;\n    const camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane);\n\n    camera.position.z = 11;\n\n    window.camera = camera;\n    camera.lookAt(0, 0.1, 0);\n\n    return camera;\n  }\n\n  function createSceneSubjects(scene) {\n    const sceneSubjects = [\n      new GeneralLights(scene),\n      new SceneSubject(scene)\n    ];\n\n    return sceneSubjects;\n  }\n\n  function update() {\n    const elapsedTime = clock.getElapsedTime();\n\n    for (let i = 0; i < sceneSubjects.length; i++)\n      sceneSubjects[i].update(elapsedTime);\n\n    renderer.render(scene, camera);\n  }\n\n  function onWindowResize() {\n    const {width, height} = canvas;\n\n    screenDimensions.width = width;\n    screenDimensions.height = height;\n\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(width, height);\n  }\n\n  return {\n    update,\n    onWindowResize\n  };\n}\n\n\n// WEBPACK FOOTER //\n// utils/threejs/SceneManager.js","import * as THREE from 'three-full';\nimport SceneManager from './SceneManager';\n\nexport default scene => {\n  const deg = Math.PI/180;\n  const pivot = new THREE.Object3D();\n  const sceneManager = SceneManager();\n  const cubeBackMaterials = [\n    new THREE.LineBasicMaterial({color: 0x302e2f}), // left\n    new THREE.LineBasicMaterial({color: 0x363234}),\n    new THREE.LineBasicMaterial({color: 0x191715}), // top\n    new THREE.LineBasicMaterial({color: 0x191715}),\n    new THREE.LineBasicMaterial({color: 0x231f20}),\n    new THREE.LineBasicMaterial({color: 0x231f20}), // right\n  ];\n\n  const cubeGeometry = new THREE.BoxGeometry(3.999, 3.999, 3.999);\n  const cubeBack = new THREE.Mesh(cubeGeometry, cubeBackMaterials);\n        cubeBack.position.set(-1, -1, 1);\n\n  // cubeBack.rotation.set(36*deg, 45*deg, 0);\n  const cubeGroup = new THREE.Group();\n        cubeGroup.rotation.set(36*deg, 225.1*deg, 0);\n\n\n  //===== GLOBAL ==== ///\n  // window.cubeGroup = cubeGroup;\n  // window.cubeBack = cubeBack;\n  // window.pivot = pivot;\n  //===== GLOBAL ==== ///\n\n  const loaderObj = new THREE.OBJLoader();\n  const loaderMtl = new THREE.MTLLoader();\n\n\n  const getCube = (modelName) => {\n\n    return new Promise((resolve) => {\n      loaderMtl.load('/static/obj/cube.mtl', materials => {\n\n        materials.preload();\n        loaderObj.setMaterials(materials);\n        loaderObj.load('/static/obj/cube.obj', (obj) => {\n\n          obj.traverse(function (child) {\n            if (child instanceof THREE.Mesh) {\n              child.material.forEach((item) => {\n                item.color.set(0xFFFFFF);\n              })\n            }\n          })\n\n          resolve(obj)\n        })\n      })\n    })\n  };\n\n\n  const addObjectToScene = (objArr) => {\n    cubeGroup.add(cubeBack);\n    objArr.forEach(item => {\n      cubeGroup.add(item);\n    });\n\n    pivot.position.set(0, -0.1, 0);\n    pivot.add( cubeGroup );\n    scene.add( pivot );\n  };\n\n\n  const whenTheAllModelsLoaded = () => {\n    console.log('uploaded');\n    scene.background = new THREE.Color('#231f20');\n    sceneManager.update();\n  };\n\n  Promise.all([\n\n    getCube().then(obj => { // Do something after Player model loaded;\n      console.log(obj);\n      obj.traverse(function (child) {\n        if (child instanceof THREE.Mesh) {\n          child.material.forEach((item) => {\n            item.transparent = true;\n          })\n        }\n      });\n\n      addObjectToScene([obj]);\n    })\n\n  ]).then(whenTheAllModelsLoaded);\n\n\n  const speed = 0.001;\n  function update(time) {\n    // if( cubeGroup ) {\n    //   cubeGroup.rotation.y += time * speed;\n    //   cubeGroup.rotation.z += time * speed;\n    // }\n  }\n\n  return {\n    update,\n    cubeGroup,\n    pivot\n  };\n}\n\n\n// WEBPACK FOOTER //\n// utils/threejs/SceneSubject.js","import SceneManager from './SceneManager';\nimport SceneSubject from './SceneSubject';\nimport { TimelineMax, Linear } from 'gsap';\n\nexport default container => {\n  const canvas = createCanvas(document, container);\n  const sceneManager = new SceneManager(canvas);\n  const freeze = true;\n  const deg = Math.PI / 180;\n  const cubeAnimation = new TimelineMax();\n\n  //======ANIMATIONS=====//\n  cubeAnimation.from(SceneSubject.pivot.rotation, 1, { z:(40 * deg), x: (-10 * deg) }).pause();\n  cubeAnimation.from(SceneSubject.cubeGroup.rotation, 1, { y:(245 * deg) }, '-=1').pause();\n  cubeAnimation.from(SceneSubject.cubeGroup.position, 1, { y: 0.5, z: -5 }, '-=1').pause();\n  //======ANIMATIONS=====//\n\n  let canvasHalfWidth;\n  let canvasHalfHeight;\n  let canvasOffsetTop;\n\n  bindEventListeners();\n  render();\n  sceneManager.update();\n\n  function createCanvas(document, container) {\n    const canvas = document.createElement('canvas');\n    container.appendChild(canvas);\n    getCanvasPosition(canvas);\n    return canvas;\n  }\n\n  function bindEventListeners() {\n    window.onresize = resizeCanvas;\n    window.onscroll = scrollCanvas;\n\n    resizeCanvas();\n  }\n\n  function resizeCanvas() {\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n\n    canvasHalfWidth = Math.round(canvas.offsetWidth / 2);\n    canvasHalfHeight = Math.round(canvas.offsetHeight / 2);\n\n    sceneManager.onWindowResize();\n  }\n\n\n  function getCanvasPosition(element) {\n    let yPosition = 0;\n    while(element) {\n      yPosition += (element.offsetTop - element.scrollTop + element.clientTop);\n      element = element.offsetParent;\n    }\n    canvasOffsetTop = yPosition;\n  }\n\n\n  function scrollCanvas(e) {\n    const delt = canvasOffsetTop - window.scrollY + 150;\n\n    if (delt < (canvas.offsetHeight)) {\n      const r = ((delt * 100) / canvas.offsetHeight) / 100;\n      cubeAnimation.progress(1-r);\n    }\n\n    sceneManager.update();\n  }\n\n  function render(time) {\n    requestAnimationFrame(render);\n    !freeze ? sceneManager.update() : false;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// utils/threejs/threeEntryPoint.js"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAtFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA1GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3EA;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}