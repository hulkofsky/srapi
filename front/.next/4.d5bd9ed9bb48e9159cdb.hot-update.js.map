{"version":3,"file":"4.d5bd9ed9bb48e9159cdb.hot-update.js","sources":["webpack:///utils/threejs/SceneSubject.js"],"sourcesContent":["import * as THREE from 'three-full';\nimport {TimelineMax} from 'gsap';\n\nexport default scene => {\n  const deg = Math.PI/180;\n  const pivot = new THREE.Object3D();\n  const cubeBackMaterials = [\n    new THREE.LineBasicMaterial({color: 0x302e2f}), // left\n    new THREE.LineBasicMaterial({color: 0x363234}),\n    new THREE.LineBasicMaterial({color: 0x191715}), // top\n    new THREE.LineBasicMaterial({color: 0x191715}),\n    new THREE.LineBasicMaterial({color: 0x231f20}),\n    new THREE.LineBasicMaterial({color: 0x231f20}), // right\n  ];\n\n  const cubeGeometry = new THREE.BoxGeometry(3.999, 3.999, 3.999);\n  const cubeBack = new THREE.Mesh(cubeGeometry, cubeBackMaterials);\n        cubeBack.position.set(-1, -1, 1);\n\n  // cubeBack.rotation.set(36*deg, 45*deg, 0);\n  const cubeGroup = new THREE.Group();\n        cubeGroup.rotation.set(36*deg, 225.1*deg, 0);\n\n  //======ANIMATIONS=====//\n  const cubeAnimation = new TimelineMax();\n  cubeAnimation.from(pivot.rotation, 1, { z:(40 * deg), x: (-10 * deg) }).pause();\n  cubeAnimation.from(cubeGroup.rotation, 1, { y:(245 * deg) }, '-=1').pause();\n  cubeAnimation.from(cubeGroup.position, 1, { y: 0.5, z: -5 }, '-=1').pause();\n  //======ANIMATIONS=====//\n\n\n  //===== GLOBAL ==== ///\n  // window.cubeGroup = cubeGroup;\n  // window.cubeBack = cubeBack;\n  // window.pivot = pivot;\n  //===== GLOBAL ==== ///\n\n  const loaderObj = new THREE.OBJLoader();\n  const loaderMtl = new THREE.MTLLoader();\n\n\n  const getCube = (modelName) => {\n\n    return new Promise((resolve) => {\n      loaderMtl.load('/static/obj/cube.mtl', materials => {\n\n        materials.preload();\n        loaderObj.setMaterials(materials);\n        loaderObj.load('/static/obj/cube.obj', (obj) => {\n\n          obj.traverse(function (child) {\n            if (child instanceof THREE.Mesh) {\n              child.material.forEach((item) => {\n                item.color.set(0xFFFFFF);\n              })\n            }\n          })\n\n          resolve(obj)\n        })\n      })\n    })\n  };\n\n\n  const addObjectToScene = (objArr) => {\n    cubeGroup.add(cubeBack);\n    objArr.forEach(item => {\n      cubeGroup.add(item);\n    });\n\n    pivot.position.set(0, -0.1, 0);\n    pivot.add( cubeGroup );\n    scene.add( pivot );\n  };\n\n\n  const whenTheAllModelsLoaded = () => {\n    console.log('uploaded');\n    scene.background = new THREE.Color('#231f20');\n  };\n\n  Promise.all([\n\n    getCube().then(obj => { // Do something after Player model loaded;\n      console.log(obj);\n      obj.traverse(function (child) {\n        if (child instanceof THREE.Mesh) {\n          child.material.forEach((item) => {\n            item.transparent = true;\n          })\n        }\n      });\n\n      addObjectToScene([obj]);\n    })\n\n  ]).then(whenTheAllModelsLoaded);\n\n\n  const speed = 0.001;\n  function update(time) {\n    // if( cubeGroup ) {\n    //   cubeGroup.rotation.y += time * speed;\n    //   cubeGroup.rotation.z += time * speed;\n    // }\n  }\n\n  return {\n    update,\n    cubeGroup,\n    pivot\n  };\n}\n\n\n// WEBPACK FOOTER //\n// utils/threejs/SceneSubject.js"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA/GA;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}